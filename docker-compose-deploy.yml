version: '3.7'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DEBUG=${DEBUG}
    depends_on:
      - db
  db:
    container_name: postgres-database
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  proxy:
    container_name: proxy
    build:
      context: ./docker/proxy
    restart: always
    depends_on:
      - app
    ports:
      - 80:80
      - 8082:8082
      - 443:443
    volumes:
      - static-data:/vol/static
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    environment:
      - DOMAIN=${DOMAIN}
      - SERVER_IP=${SERVER_IP}

  certbot:
    container_name: certbot
    build:
      context: ./docker/certbot
    command: echo "Skipping..."
    environment:
      - EMAIL=${EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy
volumes:
  static-data:
  postgres-data:
  certbot-web:
  proxy-dhparams:
  certbot-certs:

networks:
    default:
        external:
            name: networking